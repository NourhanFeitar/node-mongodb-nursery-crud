// show dbs

// show collections

// crud operation on collections

//---------   create collcetions ----------

// 1- createColllection("name") 

db.createCollection("students");

//2- adding any documents   Insert statments 

db.employees.insertOne({id:1,name:"eman"})

db.employees.insertMany([{id:1,name:"eman"}])
// 
let instructorsArray=[{_id:6,firstName:"noha",lastName:"hesham",

                age:21,salary:3500,

                address:{city:"cairo",street:10,building:8},

                courses:["js","mvc","signalR","expressjs"]},

                

                {_id:7,firstName:"mona",lastName:"ahmed",

                age:21,salary:3600,

                address:{city:"cairo",street:20,building:8},

                courses:["es6","mvc","signalR","expressjs"]},

                

                {_id:8,firstName:"mazen",lastName:"mohammed",

                age:21,salary:7040,

                address:{city:"Ismailia",street:10,building:8},

                courses:["asp.net","mvc","EF"]},

                

                {_id:9,firstName:"ebtesam",lastName:"hesham",

                age:21,salary:7500,

                address:{city:"mansoura",street:14,building:3},

                courses:["js","html5","signalR","expressjs","bootstrap"]}

				,

				{

	"_id": 10,

	"firstName": "badr",

	"lastName": "ahmed",

	"age": 22.0,

	"salary": 5550.0,

	"address": {

		"city": "cairo",

		"street": 10.0,

		"building": 8.0

	},

	"courses": [

		"sqlserver",

		"mvc",

		"signalR",

		"asp.net"

	]

},

{

	"_id": 2,

	"firstName": "mona",

	"lastName": "mohammed",

	"age": 21.0,

	"salary": 3600.0,

	"address": {

		"city": "mansoura",

		"street": 20.0,

		"building": 18.0

	},

	"courses": [

		"es6",

		"js",

		"mongodb",

		"expressjs"

	]

},

{

	"_id": 3,

	"firstName": "mazen",

	"lastName": "ali",

	"age": 30.0,

	"salary": 7010.0,

	"address": {

		"city": "cairo",

		"street": 10.0,

		"building": 5.0

	},

	"courses": [

		"asp.net",

		"mvc",

		"EF"

	]

},

{

	"_id":4,

	"firstName": "ebtesam",

	"lastName": "ahmed",

	"age": 28.0,

	"salary": 6200.0,

	"address": {

		"city": "mansoura",

		"street": 14.0,

		"building": 7.0

	},

	"courses": [

		"js",

		"html5",

		"signalR",

		"expressjs",

		"bootstrap",

		"es6"

	]

}

                ];



// 

// db.instructors.insertMany(instructorsArray);

//------------  find  select documents from collection-----/

db.employees.find()



// mongodb   PK forever  filed named _id

 //db.employees.insertOne({_id:1,name:"eman"})

 

 

 

 

 

 

 //----------------- select statements 

//----------------- === find({condition},{projection}), findOne({condition})

//  Sql server : select * from employees

db.instructors.find(); 

 

 

 //sql server : select * from employees where name=="eman"

 db.instructors.find({firstName:"mona",age:21})

 

 //sql server select firstName, lastName from instructors

db.instructors.find({},{firstName:1,lastName:1,_id:0}) 

db.instructors.find({},{age:0}) 



//--- select conditions Operators 



// A-  comaprsions Operators gt,lt,lte,gte, in



db.instructors.find({age:{$gt:21}})

db.instructors.find({age:{$in:[28,30]}})



//B - Logical operators  $or   top levels operators



db.instructors.find({

        $or:[{firstName:"mohamed"}

              ,{lastName:"mohammed"}]

    })



//C- array operators    $all  $size



//find instrcutors with course mvc

 

//  db.instructors.find({courses:"mvc"},{courses:1})

    

//find mvc and EF

// db.instructors.find({courses:{$all:["mvc","EF"]}},{courses:1})

    

//D- elements operators $type, $exists

// 

// db.instructors.find({firstName:{$exists:true},

//                         lastName:{$exists:true}})

// 



// db.instructors.insertOne({_id:12,salary:"2000"})

// db.instructors.find({salary:{$type:"number"}},{salary:1})



// F- embeded Object  address

// 

// db.instructors.find({"address.city":"mansoura"},

//         {"address.city":1 })

// 



/*************************************************

            update commands 

            updateOne, updateMany

// db.collection.updateMany(

                {condition},

                {update satatments}

                ,{options})



*************************************************/

db.instructors.updateMany(

    //condition

    {

        _id:4

    },

    //update

    {

        //1- chnage value for exitsing field 

//         $set:{lastName:"ali"}

        //2- adding new field

//         $set:{Gender:"m"}

        //3- rename filed name

//         $rename:{"Gender":"gender"}

        //4- remove field

//         $unset:{gender:""}

        //5- array adding item 

//         $push:{courses:"EF"}

//         $addToSet:{courses:"EF"}

        //6- array remove item

//         $pull:{courses:"EF"}

        //7- update value inside array

//         $set:{"courses.5":"EsNext"}

    })





/*****************************************

    deleteOne(condition) , deleteMany(condition)

 *************************************/







